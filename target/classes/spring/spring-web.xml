<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置SpringMVC -->
    <!-- 1.开启SpringMVC注解模式 -->
    <!-- 简化配置：
        (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter
        (2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持
    -->
    <mvc:annotation-driven />

    <!-- 2.静态资源默认servlet配置
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射
     -->
    <mvc:default-servlet-handler/>

    <!-- 如果配置多个拦截器, 则依据配置的先后顺序来执行 而且最先执行的都是Interceptor中preHandler,
        如果其中一个preHandler 返回false则后面的Interceptor、controller将不执行,
        当最后一个Interceptor的preHandler 执行成功后则执行当前controller。
        postHandler的执行顺序是和preHandler是相反的, 先声明的后执行-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!-- 排除下面, 不拦截请求 -->
            <mvc:exclude-mapping path="/login.html"/>
            <bean class="com.ssm.interceptors.LogInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置静态资源 -->
    <mvc:resources mapping="/html/**" location="/WEB-INF/static/html/"/>
    <mvc:resources mapping="/images/**" location="/WEB-INF/static/images/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/static/js/"/>


    <!-- 3.配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 4.扫描web相关的bean -->
    <context:component-scan base-package="com.ssm.web" />

</beans>